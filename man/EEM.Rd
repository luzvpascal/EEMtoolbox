% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/EEM.R
\name{EEM}
\alias{EEM}
\title{Generation of model ensembles}
\usage{
EEM(
  interaction_matrix,
  upper_bounds_growth_rate = 5,
  lower_bounds_growth_rate = 0,
  n_ensemble = 5000,
  model = "GLV",
  algorithm = "standard EEM",
  summ_func = EEMtoolbox::summarise_ecosystem_features,
  disc_func = EEMtoolbox::discrepancy_continuous_sum,
  sampler = EEMtoolbox::uniform_sampler,
  trans_f = EEMtoolbox::uniform_transform,
  trans_finv = EEMtoolbox::uniform_transform_inverse,
  pdf = EEMtoolbox::uniform_pdf_transformed,
  n_particles = 10000,
  mcmc_trials = 10,
  dist_final = 0,
  a = 0.6,
  c = 0.01,
  p_acc_min = 1e-04,
  ncores = 1L,
  output_prior = FALSE,
  output_args = FALSE,
  output_discrepancy = FALSE,
  output_matrix = TRUE
)
}
\arguments{
\item{interaction_matrix}{interaction signs matrix. If model is GLV or Gompertz it can be input as a single matrix of interactions or as a list of matrices defining lower and upper bounds for interaction terms lower first and upper second.     #if model is Baker, the interaction_matrix has to be a list of two lists, the first list contains matrices defining lower and upper bounds of alphas, the second list contains matrices defining lower and upper bounds of betas}

\item{upper_bounds_growth_rate}{upper bound of growth rates. Input can be one number (same upper bound for all species) or a vector of growth rates upper bounds for each species. Default 5}

\item{lower_bounds_growth_rate}{lower bound of growth rates. Input can be one number (same lower bound for all species) or a vector of growth rates lower bounds for each species. Default 0}

\item{n_ensemble}{Number of desired ensemble members. Default to 5000}

\item{model}{model representing species interactions. Default "GLV" (Generalized Lotka Volterra). options include "Baker", "Gompertz" and "customized"}

\item{algorithm}{algorithm used for sampling. Default "standard EEM" (Baker et al, 2017), options include "SMC-ABC" (Vollert et al., 2023)}

\item{summ_func}{function calculating equilibrium points and real parts of the Jacobians eigenvalues to summarise ecosystem features. Default =summarise_ecosystem_features_GLV. Options include summarise_ecosystem_features_Baker (automatically chosen if model="Baker") and summarise_ecosystem_features_Gompertz, (automatically chosen if model="Gompertz"). Needs to be defined if model="customized" chosen.}

\item{disc_func}{summary statistic (discrepancy measure). Default discrepancy_continuous_sum}

\item{sampler}{sampling function that generates random vectors from the joint prior distribution. Default EEMtoolbox::sampler function (uniform)}

\item{trans_f}{transform of prior parameter space to ensure unbounded support for MCMC sampling. Default EEMtoolbox::uniform_transform}

\item{trans_finv}{inverse of trans_f function. Default EEMtoolbox::uniform_transform_inverse}

\item{pdf}{joint probability density function. Default EEMtoolbox::uniform_pdf_transformed}

\item{n_particles}{number of particles in the sample. Default 10000}

\item{mcmc_trials}{number of MCMC steps to try before selecting appropriate number. Default 10}

\item{dist_final}{target discrepancy threshold. Default 0. If zero, p_acc_min is used to determine stopping criteria.}

\item{a}{tuning parameter for adaptive selection of discrepancy threshold sequence. Defalut 0.6}

\item{c}{tuning parameter for choosing the number of MCMC iterations in move step. Default 0.01}

\item{p_acc_min}{minimum acceptable acceptance rate in the MCMC interations before exit. Default 0.0001}

\item{ncores}{Number of cores available for sampling. Default set to 1 core (sequential sampling).}

\item{output_prior}{logical. If set to TRUE, algorithm returns prior distributions of parameters ensemble of parameters. Default FALSE}

\item{output_args}{logical. If set to TRUE, algorithm returns output from EEMtoolbox::args_function for this problem}

\item{output_discrepancy}{logical. If set to TRUE, algorithm returns discrepancy values}

\item{output_matrix}{logical. If set to TRUE, algorithm returns interaction matrix and growthrates}
}
\value{
list: part_vals: ensemble of parameters, marginal distributions
}
\description{
Generation of model ensembles based on generalized Lotka Volterra, and the other two model structures, generating algorithms include Approximate Bayesian Computation methods and standard ensemble ecosystem modelling (Baker et al., 2017)
}
\examples{
library(EEMtoolbox)
EEM(dingo_matrix) #automatically loads an example of interaction matrix as dingo_matrix
}
